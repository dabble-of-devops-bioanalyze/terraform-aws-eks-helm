---
#
# This is the canonical configuration for the `README.md`
# Run `make custom-readme` to rebuild the `README.md`
# requires docker
#

# Name of this project
name: Terraform Github Project Template

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Dabble of DevOps, SCorp"
    url: "https://www.dabbleofdevops.com"
    year: "2020"

# Canonical GitHub repo
github_repo: dabble-of-devops-bioanalyze/terraform-example-module

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/dabble-of-devops-bioanalyze/terraform-example-module.svg"
    url: "https://github.com/dabble-of-devops-bioanalyze/terraform-example-module/releases/latest"
  - name: "Discourse Forum"
    image: "https://img.shields.io/discourse/https/discourse.bioanalyze.io/posts.svg"
    url: "https://discourse.bioanalyze.io"

# List any related terraform modules that this module may be used with or that this module depends on.
related:
  - name: terraform-aws-eks-autoscaling
    description: Terraform module to provision an Autoscaling EKS Cluster. Acts as a wrapper around cloudposse/terraform-aws-eks-cluster and cloudposse/terraform-aws-eks-node-groups
    url: https://github.com/dabble-of-devops-bioanalyze/terraform-aws-eks-autoscaling
  - name: terraform-aws-eks-cluster
    description: Terraform module to deploy an AWS EKS Cluster.
    url: https://github.com/cloudposse/terraform-aws-eks-workers
  - name: terraform-aws-eks-node-group
    description: Terraform module to provision an EKS Node Group
    url: https://github.com/cloudposse/terraform-aws-eks-node-group
  - name: Zero to Kubernetes
    description: |
      JupyterHub allows users to interact with a computing environment through a webpage. As most devices have access to a web browser, JupyterHub makes it is easy to provide and standardize the computing environment for a group of people (e.g., for a class of students or an analytics team).

      This project will help you set up your own JupyterHub on a cloud/on-prem k8s environment and leverage its scalable nature to support a large group of users. Thanks to Kubernetes, we are not tied to a specific cloud provider.
    url: https://zero-to-jupyterhub.readthedocs.io/
  - name: Dask Gateway
    description: |
      Dask Gateway provides a secure, multi-tenant server for managing Dask clusters. It allows users to launch and use Dask clusters in a shared, centrally managed cluster environment, without requiring users to have direct access to the underlying cluster backend (e.g. Kubernetes, Hadoop/YARN, HPC Job queues, etcâ€¦).
    url: https://gateway.dask.org/
  - name: DaskHub
    description: |
      This chart provides a multi-user, Dask-Gateway enabled JupyterHub. It combines the JupyterHub and Dask Gateway helm charts.
    url: https://github.com/dask/helm-chart/blob/main/daskhub/README.md
  - name: Dask
    description: |
      Dask is a flexible library for parallel computing in Python.
    url: https://docs.dask.org/en/latest/
  - name: terraform-aws-ec2-autoscale-group
    description: Terraform module to provision Auto Scaling Group and Launch Template
      on AWS
    url: https://github.com/cloudposse/terraform-aws-ec2-autoscale-group
  - name: terraform-aws-ec2-instance
    description: Terraform module for providing a general purpose EC2 instance
    url: https://github.com/cloudposse/terraform-aws-ec2-instance
  - name: terraform-aws-ec2-instance-group
    description: Terraform module for provisioning multiple general purpose EC2 hosts
      for stateful applications
    url: https://github.com/cloudposse/terraform-aws-ec2-instance-group
  - name: "terraform-null-label"
    description: "Terraform module designed to generate consistent names and tags for resources. Use terraform-null-label to implement a strict naming convention."
    url: "https://github.com/cloudposse/terraform-null-label"

# Short description of this project
description: |
 This is a GitHub project template. To get started using this structure click the 'Use this Template' button on the main github repo page.

 Update the README.yaml to reflect this project.

 This project wouldn't be possible without open source software. The conventions used in the terraform recipes come from the [CloudPosse](https://github.com/cloudposse/terraform-example-module) group.

# List any resources helpful for someone to get started. For example, link to the hashicorp documentation or AWS documentation.
references:
  - name: "Terraform Standard Module Structure"
    description: "HashiCorp's standard module structure is a file and directory layout we recommend for reusable modules distributed in separate repositories."
    url: "https://www.terraform.io/docs/modules/index.html#standard-module-structure"
  - name: "Terraform Module Requirements"
    description: "HashiCorp's guidance on all the requirements for publishing a module. Meeting the requirements for publishing a module is extremely easy."
    url: "https://www.terraform.io/docs/registry/modules/publish.html#requirements"
  - name: "Terraform `random_integer` Resource"
    description: "The resource random_integer generates random values from a given range, described by the min and max attributes of a given resource."
    url: "https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/integer"
  - name: "Terraform Version Pinning"
    description: "The required_version setting can be used to constrain which versions of the Terraform CLI can be used with your configuration"
    url: "https://www.terraform.io/docs/configuration/terraform.html#specifying-a-required-terraform-version"


# Introduction to the project
#introduction: |-
#  This is an introduction.

# How to use this module. Should be an easy example to copy and paste.
usage: |-
  For a complete example, see [examples/complete](examples/complete).

  For automated tests of the complete example using [bats](https://github.com/bats-core/bats-core) and [Terratest](https://github.com/gruntwork-io/terratest)
  (which tests and deploys the example on AWS), see [test](test).

  ```hcl
  module "eks" {
    source = "dabble-of-devops-bioanalyze/eks-jupyterhub/aws"

    region = var.region
    vpc_id = var.vpc_id
    subnet_ids = var.subnet_ids

    oidc_provider_enabled = true
    cluster_encryption_config_enabled = true

    context = module.this.context
  }
  ```

# Example usage
examples: |-
  Here is an example of using this module:
  - [`examples/complete`](https://github.com/dabble-of-devops-bioanalyze/terraform-aws-eks-jupyterhub/) - complete example of using this module

# How to get started quickly
#quickstart: |-
#  Here's how to get started...

# Other files to include in this README from the project folder
include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Jillian Rowe"
    github: "jerowe"
