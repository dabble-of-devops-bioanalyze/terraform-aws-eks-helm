name: test

on:
  push:
    branches:
    - master

jobs:
  test-module:
    runs-on: ubuntu-latest
    container: cloudposse/build-harness:slim-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run Tests
      shell: bash
      id: module
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        AWS_REGION: "us-east-1"
        AWS_DEFAULT_REGION: "us-east-1"
      run: |

        make BUILD_HARNESS_PATH=/build-harness \
          PACKAGES_PREFER_HOST=true -f \
          /build-harness/templates/Makefile.build-harness \
          terraform/validate

  test-examples:
    needs: test-module
    runs-on: ubuntu-latest
    container: dabbleofdevops/terraform:terraform-0.14.0
    strategy:
      matrix:
        example: ['examples/nginx']
    steps:
    - uses: actions/checkout@v2
    - name: Test Example
      shell: bash
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        # always test in the us-east-2 region
        AWS_REGION: "us-east-2"
        AWS_DEFAULT_REGION: "us-east-2"
      run: |
          cd ${{ matrix.example}}
          terraform init
          terraform refresh
          terraform apply -auto-approve
          terraform output -json
          # let everything spin up
          sleep 60
          # TEST BABY TEST
          pip install -r tests/requirements.txt
          python -m pytest -s --log-cli-level=INFO tests/test_helm_charts.py
          # There is a race condition somewhere in the EKS module with creating the auth
          # As long as the final output is empty we're good
          terraform destroy -auto-approve; \
            terraform state rm module.eks.module.eks_cluster.kubernetes_config_map.aws_auth_ignore_changes[0]; \
            terraform refresh; \
            terraform destroy -auto-approve; \
            terraform output -json